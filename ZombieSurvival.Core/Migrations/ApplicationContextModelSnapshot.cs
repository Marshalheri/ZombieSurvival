// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZombieSurvival.Core.Repository;

namespace ZombieSurvival.Core.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZombieSurvival.Core.Models.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<long>("SurvivorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SurvivorId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ZombieSurvival.Core.Models.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2021, 9, 27, 3, 53, 11, 389, DateTimeKind.Local).AddTicks(6568),
                            Name = "Water",
                            Point = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2L,
                            DateCreated = new DateTime(2021, 9, 27, 3, 53, 11, 390, DateTimeKind.Local).AddTicks(4233),
                            Name = "Food",
                            Point = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3L,
                            DateCreated = new DateTime(2021, 9, 27, 3, 53, 11, 390, DateTimeKind.Local).AddTicks(4247),
                            Name = "Medication",
                            Point = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4L,
                            DateCreated = new DateTime(2021, 9, 27, 3, 53, 11, 390, DateTimeKind.Local).AddTicks(4250),
                            Name = "Ammunition",
                            Point = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ZombieSurvival.Core.Models.Survivor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ContaminationCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInfected")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Survivors");
                });

            modelBuilder.Entity("ZombieSurvival.Core.Models.Inventory", b =>
                {
                    b.HasOne("ZombieSurvival.Core.Models.Survivor", "Survivor")
                        .WithMany("Inventories")
                        .HasForeignKey("SurvivorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survivor");
                });

            modelBuilder.Entity("ZombieSurvival.Core.Models.Survivor", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
